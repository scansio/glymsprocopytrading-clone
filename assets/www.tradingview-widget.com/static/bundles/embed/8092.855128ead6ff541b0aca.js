"use strict";(self.webpackChunktradingview=self.webpackChunktradingview||[]).push([[8092],{851553:(e,t,s)=>{s.d(t,{BusinessDay:()=>i});var r=s(276536),n=s(532448);class i{constructor(e,t,s){this.year=e,this.month=t,this.day=s}toString(){return`${(0,n.addLeadingZeros)(this.year,4)}-${(0,n.addLeadingZero)(this.month)}-${(0,n.addLeadingZero)(this.day)}`}toyyyymmdd(){return`${(0,n.addLeadingZeros)(this.year,4)}${(0,n.addLeadingZero)(this.month)}${(0,n.addLeadingZero)(this.day)}`}compareTo(e){return this.year>e.year||this.year===e.year&&this.month>e.month||this.year===e.year&&this.month===e.month&&this.day>e.day?1:this.year===e.year&&this.month===e.month&&this.day===e.day?0:-1}before(e){return-1===this.compareTo(e)}toCalendar(e){return(0,r.get_cal)(e??(0,r.get_timezone)("Etc/UTC"),this.year,this.month-1,this.day)}addDays(e){const t=this.toCalendar((0,r.get_timezone)("Etc/UTC"));return(0,r.add_date)(t,e),i.fromCalendar(t)}firstDayOfYear(){return new i(this.year,1,1)}getDayOfWeek(){const e=this.toCalendar();return(0,r.get_day_of_week)(e)}static fromCalendar(e){return new i((0,r.get_year)(e),(0,r.get_month)(e)+1,(0,r.get_day_of_month)(e))}}},208092:(e,t,s)=>{s.d(t,{SessionsSpec:()=>W});var r=s(650151),n=s(276536),i=s(127707),o=s(851553);function a(e,t){return e.compareTo(t)}class h{constructor(e,t,s){(0,r.assert)(Number.isFinite(e)&&Number.isFinite(t)&&Number.isFinite(s),"Invalid arguments"),this._dayOfWeek=e,this._start=t,this._length=s}start(){return this._start+n.minutesPerDay*this.sessionStartDaysOffset()}startOffset(){return this._start}sessionStartDaysOffset(){return this._start>=0?0:this._start%n.minutesPerDay==0?-Math.ceil(this._start/n.minutesPerDay):-Math.floor(this._start/n.minutesPerDay)}isOvernight(){return this._start<0}dayOfWeek(){return this._dayOfWeek}sessionStartDayOfWeek(){let e=this._dayOfWeek-this.sessionStartDaysOffset();return e<n.SUNDAY&&(e+=7),e}length(){return this._length}compareTo(e){const t=this._weight(),s=t+this._length,r=e._weight(),n=r+e._length;return t<=r&&r<s||r<=t&&t<n?0:t>r?1:-1}contains(e){return this._contains((0,n.get_minutes_with_hours)(e),(0,n.get_day_of_week)(e))}_weight(){return this._dayOfWeek*n.minutesPerDay+this._start}_contains(e,t){let s=t-this._dayOfWeek;s>0&&(s-=7);const r=s*n.minutesPerDay+e;return r>=this._start&&r<this._start+this._length}}class d{constructor(e,t,s){this.weekIndex=e,this.entryIndex=t,this.entries=s}getEntry(){return this.entries[this.entryIndex]}}class l{constructor(e,t,s,r){this._maxTradingDayLength=null,this._list=e,this._entriesByDay=t,this._firstDayOfWeek=s,this._weekEndsCount=r}firstDayOfWeek(){return this._firstDayOfWeek}entriesByDay(){return this._entriesByDay}list(){return this._list}isWeekEnd(e){return!this._entriesByDay.has(e)}weekEndsCount(){return this._weekEndsCount}longestSessionLength(){return 0===this._list.length?0:Math.max(...this._list.map((e=>e.length())))}maxTradingDayLength(){if(null==this._maxTradingDayLength){const e=new Map;for(const t of this._list){const s=t.dayOfWeek();e.set(s,t.length()+(e.get(s)??0))}let t=0;e.forEach((e=>{
t=Math.max(t,e)})),this._maxTradingDayLength=t}return this._maxTradingDayLength}}class c{constructor(e,t,s){this._startDay=e,this._entries=s,this._specEndDay=t}getEntries(){return this._entries}getStartDay(){return this._startDay}getSpecEndDay(){return this._specEndDay}isOpenEnded(){return null==this._specEndDay}}const _=[n.MONDAY,n.TUESDAY,n.WEDNESDAY,n.THURSDAY,n.FRIDAY],y=[n.SUNDAY,n.MONDAY,n.TUESDAY,n.WEDNESDAY,n.THURSDAY,n.FRIDAY,n.SATURDAY];function f(e){return e>=48&&e<=57}const u=[0,31,28,31,30,31,30,31,31,30,31,30,31];class g extends Map{constructor(){super(...arguments),this._keyStringsToKey=new Map}get(e){const t=this._keyStringsToKey.get(e.toString());return t&&super.get(t)}set(e,t){const s=e.toString(),r=this._keyStringsToKey.get(s);return void 0!==r&&super.delete(r),this._keyStringsToKey.set(s,e),super.set(e,t)}has(e){return this._keyStringsToKey.has(e.toString())}}function k(e){return e.length>0}class D{constructor(){this.historyEntries=[],this.timezone="",this.adjustSessionsIndexes=null}parseSessions(e,t){this._parseHistoryEntries(e,t,!1)}parseSessionsAndValidateDateTime(e,t){this._parseHistoryEntries(e,t,!0)}static parseHolidaysAndCorrections(e,t,s,r){return this._parseHolidaysAndCorrectionsImpl(e,t,s,r)}static parseHolidaysAndCorrectionsAndValidateDateTime(e,t,s){return this._parseHolidaysAndCorrectionsImpl(e,t,s,!0)}_clearAll(){this.timezone="",this.historyEntries=[],this.adjustSessionsIndexes=[]}_parseHistoryEntries(e,t,s){this._clearAll();const r=t.split("/");let n=null,i=null;this.hasHistoryCorrections=r.length>1;for(let t=0;t<r.length;t++){const o=r[t].split("#");let a=null;if(t!==r.length-1){if(2!==o.length)throw new Error(`bad session history entry definition: ${r[t]}`);a=D._parseDay(o[1],"session history entry end",s).toCalendar()}else{if(1!==o.length)throw new Error(`bad session history entry definition: ${r[t]}`);a=null}if(null!==i&&null!==a&&a.getTime()<i.getTime())throw new Error(`history sessions are not listed in ascending order (${i} -> ${a}`);const h=this._parseSessionsImpl(e,o[0],s);n=this._adjustStartToPreviousSession(h.firstDayOfWeek());const d=new c(n,a,h);this.historyEntries.push(d),i=a}}_parseSessionsImpl(e,t,s){this.timezone=e,t=this._parseFirstDayOfWeek(t);const r=new Map,n=[];if("24x7"===t.toLowerCase())for(const e of y){const t=D._createSessionEntry(e,0,0,0,0);n.push(t);const s=[];s.push(t),r.set(e,s)}else{let e=!1;const i=new Map;for(const s of t.split("|")){const t=s.split(":").filter(k);if(1!==t.length&&2!==t.length)throw new Error(`bad session section: ${s}`);const r=1===t.length;if(r){if(e)throw new Error(`duplicated default section: ${s}`);e=!0}const n=r?_:D._parseWorkingDays(t[1]);for(const e of n)r&&i.has(e)||i.set(e,t[0])}for(const e of y){const t=i.get(e);if(void 0!==t)for(const i of t.split(",").filter(k)){const t=D._parseSessionEntry(e,i,s);let o=r.get(e);void 0===o&&(o=[]),o.push(t),n.push(t),r.set(e,o)}}}n.sort(a);const i=new Set;for(const e of n)i.add(e.dayOfWeek());const o=7-i.size;return new l(n,r,this._firstDayOfWeek,o)}_parseFirstDayOfWeek(e){
const t=e.split(";");if(this._firstDayOfWeek=n.MONDAY,t.length>2)throw new Error(`bad sessions spec: ${e}`);if(1===t.length)return e;let s=1;let r=t[0].indexOf("-")>=0?NaN:parseInt(t[0]);if(isNaN(r)&&(s=0,r=parseInt(t[1])),r<n.SUNDAY||r>n.SATURDAY)throw new Error(`bad sessions spec: ${e}`);return this._firstDayOfWeek=r,t[s]}_adjustStartToPreviousSession(e){if(0===this.historyEntries.length)return null;const t=(0,r.ensureNotNull)(this.historyEntries[this.historyEntries.length-1].getSpecEndDay()),s=e-(0,n.get_day_of_week)(t);if(0===s)return t;const i=(0,n.clone)(t);return(0,n.add_date)(i,s),t.getTime()<i.getTime()||(0,n.add_date)(i,7),i}static _parseSessionEntry(e,t,s){const r=t.split("-");if(2!==r.length)throw new Error(`bad session entry: ${t}`);let n=0,i=r[0];if(i.includes("F")){const e=i.split("F");i=e[0],n=""!==e[1]?parseInt(e[1]):1}let o=0,a=r[1];if(a.includes("F")){const e=a.split("F");a=e[0],o=""!==e[1]?parseInt(e[1]):1}const h=this._minutesFromHHMM(i,t,s),d=this._minutesFromHHMM(a,t,s);return this._createSessionEntry(e,h,d,n,o)}static _minutesFromHHMM(e,t,s){if(4===e.length&&f(e.charCodeAt(0))&&f(e.charCodeAt(1))&&f(e.charCodeAt(2))&&f(e.charCodeAt(3))){const t=parseInt(e),r=Math.trunc(t/100),n=t%100;if(!s||r<24&&n<60)return n+60*r}throw new Error(`incorrect entry syntax: ${t}`)}static _parseDay(e,t,s){if(8===e.length&&f(e.charCodeAt(0))&&f(e.charCodeAt(1))&&f(e.charCodeAt(2))&&f(e.charCodeAt(3))&&f(e.charCodeAt(4))&&f(e.charCodeAt(5))&&f(e.charCodeAt(6))&&f(e.charCodeAt(7))){const t=parseInt(e.substring(0,4)),r=parseInt(e.substring(4,6)),n=parseInt(e.substring(6,8));if(!s||this._isValidDayOfMonth(n,r,t))return new o.BusinessDay(t,r,n)}throw new Error(`bad ${t} date: ${e}`)}static _isValidDayOfMonth(e,t,s){return!(t<1||t>12)&&(!(e<1||e>u[t])||!(2!==t||29!==e||!(0,n.is_leap_year)(s)))}static _parseWorkingDays(e){const t=[];for(let s=0;s<e.length;s++){const r=e.charCodeAt(s)-48;if(r<1||r>7)throw new Error(`Invalid days specification: ${e}`);t.includes(r)||t.push(r)}return t}static _createSessionEntry(e,t,s,i,o){(0,r.assert)(i>=0&&i<7),(0,r.assert)(o>=0&&o<7),0===s&&(s=n.minutesPerDay),i===o&&s<=t&&(i+=1),(0,r.assert)(i>=o),i>0&&(t-=i*n.minutesPerDay),o>0&&(s-=o*n.minutesPerDay);const a=s-t;return(0,r.assert)(e>=n.SUNDAY&&e<=n.SATURDAY),(0,r.assert)(t<n.minutesPerDay),(0,r.assert)(a>0),new h(e,t,a)}static _parseHolidaysAndCorrectionsImpl(e,t,s,r){const i=new g;if(""!==t){const e=[];for(const s of t.split(",")){const t=this._parseDay(s,"holiday",r);i.set(t,e)}}if(""===s)return i;for(const e of s.split(";")){const t=e.split(":");if(2!==t.length)throw new Error(`bad correction section: ${e}`);const s=[];if("dayoff"!==t[0])for(const e of t[0].split(","))s.push(this._parseSessionEntry(1,e,r));for(const e of t[1].split(",")){const t=this._parseDay(e,"correction",r),o=(0,n.get_day_of_week)(t.toCalendar()),a=[];for(let e=0;e<s.length;e++){const t=s[e];a.push(new h(o,t.startOffset(),t.length()))}i.set(t,a)}}return i}}function E(e,t){return e.compareTo(t)<0}const p=(0,n.get_timezone)("Etc/UTC");class m{constructor(e){
this._value=e}get(){return this._value}set(e){this._value=e}}class W{constructor(e="Etc/UTC",t="0000-0000",s="",r="",i=!1){const o=new D;i?o.parseSessionsAndValidateDateTime(e,t):o.parseSessions(e,t),this._entries=o.historyEntries,this._hasHistoryCorrections=o.hasHistoryCorrections,this._presentHistoryEntry=o.historyEntries[o.historyEntries.length-1],this._timezone=o.timezone,this._timezoneObj=(0,n.get_timezone)(o.timezone),this._holidayAndCorrectionMap=i?D.parseHolidaysAndCorrectionsAndValidateDateTime(e,s,r):D.parseHolidaysAndCorrections(e,s,r,i);const a=this._holidayAndCorrectionMap.keys();this._entriesHash=new Map;const h=this._prepareSessionsBorderParams();this._borderWeeksIndicesHash=h.borderWeeksIndicesHash,this._yearToWeeksIndicesHash=h.yearToWeeksIndicesHash,this._weekIndicesOfLastHistoryWeek=h.weekIndicesOfLastHistoryWeek,this._presentStartWeekIndex=h.startPresentSessionWeekIndex,this._yearToCalculatedAddedWeekIndicesHash=new Map,""===s&&""===r&&null===this._weekIndicesOfLastHistoryWeek?this._isThereCorrections=!1:this._isThereCorrections=!0;for(const e of a){const t=this.getWeekIndex(e.toCalendar());this._entriesHash.set(t,new m(null))}}hasHistoryCorrections(){return this._hasHistoryCorrections}firstDayOfWeek(){return this._presentHistoryEntry.getEntries().firstDayOfWeek()}includesDay(e){return this._getEntriesForDay(e).length>0}getEntriesForWeek(e){if(!this._isThereCorrections)return this._presentHistoryEntry.getEntries();(0,r.assert)(e>=0);const t=e,s=this._entriesHash.get(t);if(void 0===s){return this._getHistoryAndIndexForWeek(t).getEntries()}let i=s.get();if(null!==i)return i;let h=null;const d=this._borderWeeksIndicesHash.get(t);h=void 0===d?this._getHistoryAndIndexForWeek(t).getEntries():this._prepareBorderWeekHistory(d);const c=new Map(h.entriesByDay());let _=[...h.list()];const f=this._weekIndexToLocalDateTime(e),u=this._weekIndexToLocalDateTime(e+1),g=o.BusinessDay.fromCalendar(f),k=o.BusinessDay.fromCalendar(u);for(const[e,t]of this._selectHolidays(g,k)){const s=(0,n.get_day_of_week)(e.toCalendar());_=_.filter((e=>e.dayOfWeek()!==s)),_.push(...t),0===t.length?c.delete(s):c.set(s,t)}_.sort(a);const D=y.length-c.size;return i=new l(_,c,h.firstDayOfWeek(),D),s.set(i),i}getHistoryByIndex(e){return this._entries[e]}timezone(){return this._timezone}timezoneObj(){return this._timezoneObj}longestSessionLength(){let e=this._presentHistoryEntry.getEntries().longestSessionLength();for(let t=0;t<this._entries.length-1;t++){const s=this._entries[t].getEntries().longestSessionLength();e=Math.max(e,s)}let t=-1/0;for(const e of this._holidayAndCorrectionMap.values())t=Math.max(t,...e.map((e=>e.length())));return Math.max(t,e)}isWeekEnd(e){const t=this.getWeekIndex(e);let s;return s=void 0===this._borderWeeksIndicesHash.get(t)?this._getHistoryAndIndexForWeek(t).getEntries():this.getEntriesForWeek(t),s.isWeekEnd((0,n.get_day_of_week)(e))}isCalWeekEnd(e){const t=(0,n.get_day_of_week)(e);if(!this._isThereCorrections)return this._presentHistoryEntry.getEntries().isWeekEnd(t)
;const s=this.getWeekIndex(e),r=this.getEntriesForWeek(s),i=o.BusinessDay.fromCalendar(e),a=this._holidayAndCorrectionMap.get(i);return void 0===a?r.isWeekEnd(t):0===a.length}holidaysFromYearStart(e){const t=e instanceof o.BusinessDay?e:o.BusinessDay.fromCalendar(e);return this._holidaysFromYearStart(t)}daysOffFromYearStart(e){const t=(0,n.get_cal)(p,(0,n.get_year)(e),n.JANUARY,1),s=this.getWeekIndex(t),r=(0,n.get_day_of_week)(t),i=(0,n.get_day_of_week)(e)-1;if((0,n.get_day_of_year)(e)+r<=n.LAST_DAY_OF_WEEK+n.FIRST_DAY_OF_WEEK)return this._getDaysOffForWeekInBorders(s,r,i);const o=this.getWeekIndex(e);let a=this._getDaysOffForWeekInBorders(s,r,n.LAST_DAY_OF_WEEK);for(let e=s+1;e<o;e++){a+=this.getEntriesForWeek(e).weekEndsCount()}return a+=this._getDaysOffForWeekInBorders(o,n.FIRST_DAY_OF_WEEK,i),a}weekEndsCountForSingleSession(){return(0,r.assert)(!this.hasHistoryCorrections()),this._presentHistoryEntry.getEntries().weekEndsCount()}intradayCanBeBuiltFrom24x7(e){for(const t of this._entries)if(!t.getEntries().list().every((t=>t.start()%e==0&&t.length()%e==0)))return!1;return!0}intradayCanBeBuiltFrom24x7Seconds(e){for(const t of this._entries)if(!t.getEntries().list().every((t=>60*t.start()%e==0&&60*t.length()%e==0)))return!1;return!0}indexOfSession(e,t,s){(0,r.assert)(t>=n.SUNDAY&&t<=n.SATURDAY),(0,r.assert)(s>=0&&s<n.minutesPerDay);const o=this.getEntriesForWeek(e),a=o.list();let l=(0,i.lowerbound)(a,new h(t,s,0),E);if(l<a.length)return new d(e,l,[...a]);let c=e+1,_=this.getEntriesForWeek(c);if(0!==_.list().length){const e=7-t+_.firstDayOfWeek()-1;if(s=-(n.minutesPerDay-s+e*n.minutesPerDay),l=(0,i.lowerbound)(_.list(),new h(_.firstDayOfWeek(),s,0),E),l<_.list().length)return new d(c,l,[..._.list()])}for(;;)if(c++,s-=n.minutesPerWeek,_=this.getEntriesForWeek(c),0!==_.list().length&&(l=(0,i.lowerbound)(_.list(),new h(o.firstDayOfWeek(),s,0),E),!(l>=_.list().length)))return new d(c,l,[..._.list()])}findSession(e,t,s,r=0){const n=this.indexOfSession(e,t,s),i=n.entries;let o=n.entryIndex;if(0!==r){const e=i[o].dayOfWeek(),t=r>0?1:-1;for(;;){const s=o+t;if(s<0||s>=i.length||i[s].dayOfWeek()!==e)break;o=s}}return new d(n.weekIndex,o,i)}getWeekIndex(e){return this._isThereCorrections?W._getWeekIndexImpl(e):0}correctTradingDay(e){const t=this._correctTradingDay(this.getWeekIndex(e),(0,n.get_day_of_week)(e),(0,n.get_minutes_with_hours)(e)),s=(0,n.clone)(e);return(0,n.add_date)(s,t),s}alignToSessionStart(e,t=0){const s=(0,n.get_day_of_week)(e),r=(0,n.get_minutes_from_midnight)(e),i=this.getWeekIndex(e),o=this.findSession(i,s,r,t),a=o.getEntry(),h=a.dayOfWeek()-s+7*Math.trunc(o.weekIndex-i);0!==h&&(0,n.add_date)(e,h);const d=a.startOffset();return(0,n.set_hms)(e,Math.trunc(d/60),d%60,0,0),a.length()}businessDaysToCalendarDays(e,t){return this._businessDaysToCalendarDays(this.getWeekIndex(e),(0,n.get_day_of_week)(e),t)}calendarDaysToBusinessDays(e,t){return this._calendarDaysToBusinessDays(this.getWeekIndex(e),(0,n.get_day_of_week)(e),t)}alignToNearestSessionStart(e,t){
return this._alignToNearestSessionValue(e,t,this._entrySessionStart.bind(this))}alignToNearestSessionEnd(e,t){return this._alignToNearestSessionValue(e,t,this._entrySessionEnd.bind(this))}bordersOfDailyBar(e){const t=this._getEntriesForDay(e);if(0===t.length)return null;const s=t.slice();s.sort(a);const r=this._getLeftEntryBorder(e,s[0]),i=s[s.length-1],o=60*(i.startOffset()+i.length())-1,h=(0,n.clone)(e);return(0,n.set_seconds)(h,o),{from:r,to:h}}leftBorderOfDailyBar(e){const t=this._getEntriesForDay(e);if(0===t.length)return null;const s=t.slice();return s.sort(a),this._getLeftEntryBorder(e,s[0])}checkSession(){return this._checkEachHistorySession()&&this._checkSpecialEntries()&&this._checkTooManyCorrectionsOnWeek()}inSession(e){e=new Date(1e3*Math.floor(e.getTime()/1e3));const t=this.alignToNearestSessionStart(e,-1),s=this.alignToNearestSessionEnd(t,1);return!(e.getTime()>s.getTime())}hasWeekEnds(){for(const e of this._entries)if(0!==e.getEntries().weekEndsCount())return!0;return!1}getWeekIndicesWithAdditionalWeekBars(e){let t=this._yearToCalculatedAddedWeekIndicesHash.get(e);return void 0===t&&(t=this._calculateAddedIndices(e),this._yearToCalculatedAddedWeekIndicesHash.set(e,t)),t}_prepareSessionsBorderParams(){const e=new Map,t=new Map;let s=null;this._entries.length>1&&(s=Array.from({length:this._entries.length-1},(()=>0)));let n=0;for(let i=0;i<this._entries.length-1;i++){const o=this._entries[i+1],a=(0,r.ensureNotNull)(o.getStartDay());n=W._getWeekIndexImpl(a),e.set(n,i+1),this._addToYearHash(t,a,n),this._entriesHash.set(n,new m(null)),(0,r.ensureNotNull)(s)[i]=n}return{borderWeeksIndicesHash:e,yearToWeeksIndicesHash:t,startPresentSessionWeekIndex:n,weekIndicesOfLastHistoryWeek:s}}_addToYearHash(e,t,s){const r=(0,n.get_year)(t);let i=e.get(r);void 0===i&&(i=[],e.set(r,i)),i.push(s)}_getHistoryAndIndexForWeek(e){if(this._presentStartWeekIndex<=e)return this._presentHistoryEntry;const t=this._getIndexOfHistoryEntry(e);return this._entries[t]}_getIndexOfHistoryEntry(e){let t=0,s=this._entries.length-1,n=Math.floor((t+s)/2);for((0,r.assert)(null!==this._weekIndicesOfLastHistoryWeek);;){if(this._weekIndicesOfLastHistoryWeek[n]>=e){if(s=n-1,s<t)return n}else if(t=n+1,s<t)return n+1;n=Math.floor((t+s)/2)}}_selectHolidays(e,t){const s=new Set;for(const[r,n]of this._holidayAndCorrectionMap)r.compareTo(e)>=0&&r.compareTo(t)<0&&s.add([r,n]);return s}_prepareBorderWeekHistory(e){const t=this._entries[e-1],s=this._entries[e],i=new Map,o=[],a=(0,n.get_day_of_week)((0,r.ensureNotNull)(s.getStartDay()));for(let e=0;e<y.length;e++){const r=y[e];if(r<a){const e=t.getEntries().entriesByDay().get(r);void 0!==e&&(o.push(...e),i.set(r,e))}else{const e=s.getEntries().entriesByDay().get(r);void 0!==e&&(o.push(...e),i.set(r,e))}}return new l(o,i,s.getEntries().firstDayOfWeek(),0)}_holidaysFromYearStart(e){if(!this._isThereCorrections)return 0;(0,r.assert)(!this.hasHistoryCorrections());const t=e.firstDayOfYear();let s=0;for(const[r,n]of this._selectHolidays(t,e)){const e=r.getDayOfWeek(),t=0===n.length
;this._presentHistoryEntry.getEntries().isWeekEnd(e)?s+=t?0:-1:s+=t?1:0}return s}_getDaysOffForWeekInBorders(e,t,s){let r=0;const n=this.getEntriesForWeek(e);for(let e=t;e<=s;e++)n.entriesByDay().has(e)||r++;return r}_weekIndexToLocalDateTime(e){const t=Math.floor(86400*e*7+86400-62167219200),s=(0,n.get_cal_from_unix_timestamp_ms)(p,1e3*t);return(0,n.set_hms)(s,0,0,0,0),s}_correctTradingDay(e,t,s){const r=this.findSession(e,t,s,0);return r.getEntry().dayOfWeek()-t+7*Math.trunc(r.weekIndex-e)}_entrySessionValue(e,t,s,r){t=(0,n.clone)(t);let i=(0,n.get_day_of_week)(t);const o=e.getEntry();let a=o.dayOfWeek()-o.sessionStartDaysOffset();const h=this.getWeekIndex(t);let d=Math.trunc(e.weekIndex-h),l=!1;if(a<n.SUNDAY&&(d<=0?l=!0:d--,a+=7),(d>0&&s>=0||d<0&&s<0)&&(0,n.add_date)(t,7*d),!o.contains(t)){let e=a-i;l&&s<0&&(e=-(7-a+i)),(0,n.add_date)(t,e),i=(0,n.get_day_of_week)(t)}if(o.isOvernight()){const e=o.sessionStartDaysOffset(),s=(i-(o.dayOfWeek()-e)+7)%7;0!==s&&(0,n.add_date)(t,-s)}const c=r(o);return(0,n.set_seconds)(t,c),t}_businessDaysToCalendarDays(e,t,s){let r=0,i=0;for(;i<s;){const o=this.getEntriesForWeek(e);for(let e=t;e<=n.SATURDAY;e++)if(r++,void 0!==o.entriesByDay().get(e)&&i++,i>=s)return r;e++,t=n.SUNDAY}return r}_calendarDaysToBusinessDays(e,t,s){let r=0,i=0;for(;r<s;){const o=this.getEntriesForWeek(e);for(let e=t;e<=n.SATURDAY;e++)if(r++,void 0!==o.entriesByDay().get(e)&&i++,r>=s)return i;e++,t=n.SUNDAY}return i}_entrySessionStart(e,t,s){return this._entrySessionValue(e,t,s,(e=>60*e.start()))}_entrySessionEnd(e,t,s){return this._entrySessionValue(e,t,s,(e=>60*(e.start()+e.length())-1))}_alignToNearestSessionValue(e,t,s){const r=(0,n.get_day_of_week)(e),i=(0,n.get_minutes_with_hours)(e),o=this.getWeekIndex(e);let a=this.findSession(o,r,i);if(1===t)return s(a,e,t);const h=a.getEntry(),l=h.contains(e),c=o===a.weekIndex,_=h.sessionStartDaysOffset()-h.dayOfWeek()>=0;if(l&&(c||_))return s(a,e,t);let y=a.entryIndex-1;if(y<0){let e=a.weekIndex,t=a.entries;if(0===e)e--,y+=t.length;else for(;y<0;)e--,t=this.getEntriesForWeek(e).list(),y+=t.length;a=new d(e,y,t)}else a=new d(a.weekIndex,y,a.entries);return s(a,e,t)}_getEntriesForDay(e){const t=(0,n.get_day_of_week)(e),s=this.getEntriesForWeek(this.getWeekIndex(e)).entriesByDay().get(t);return void 0!==s?s:[]}_getLeftEntryBorder(e,t){let s=t.startOffset();const r=-Math.trunc((s-1439)/1440);s+=1440*r;const i=(0,n.get_cal)(p,(0,n.get_year)(e),(0,n.get_month)(e),(0,n.get_day_of_month)(e),Math.trunc(s/60),s%60,0);return(0,n.add_date)(i,-r),i}_checkEachHistorySession(){for(const e of this._entries){const t=e.getEntries().list();if(!this._checkEntriesForIntersections(t,t,t))return!1}return!0}_checkEntriesForIntersections(e,t,s){const r=this._buildTestEntries(e,t,s);for(let e=0;e<r.length-1;e++)for(let t=e+1;t<r.length;t++)if(0===r[e].compareTo(r[t]))return!1;return!0}_buildTestEntries(e,t,s){const r=[];for(let t=0;t<e.length;t++){const s=e[t],n=new h(s.dayOfWeek(),s.startOffset(),s.length());r.push(n)}for(let e=0;e<t.length;e++){
const s=t[e],n=new h(s.dayOfWeek()+7,s.startOffset(),s.length());r.push(n)}for(let e=0;e<s.length;e++){const t=s[e],n=new h(t.dayOfWeek()+14,t.startOffset(),t.length());r.push(n)}return r}_checkSpecialEntries(){for(const[e]of this._entriesHash){const t=this.getEntriesForWeek(e).list(),s=this.getEntriesForWeek(e-1).list(),r=this.getEntriesForWeek(e+1).list();if(!this._checkEntriesForIntersections(s,t,r))return!1}return!0}_checkTooManyCorrectionsOnWeek(){if(this._entries.length<2)return!0;for(let e=0;e<this._entries.length-2;e++){const t=this._entries[e],s=this._entries[e+1];if(this.getWeekIndex((0,r.ensureNotNull)(t.getSpecEndDay()))===this.getWeekIndex((0,r.ensureNotNull)(s.getSpecEndDay())))return!1}return!0}_calculateAddedIndices(e){const t=[],s=this._yearToWeeksIndicesHash.get(e);if(void 0===s)return t;for(const e of s){const s=(0,r.ensureDefined)(this._borderWeeksIndicesHash.get(e)),i=this._entries[s],o=this._entries[s-1];let a=i.getEntries().firstDayOfWeek()-o.getEntries().firstDayOfWeek();for(;a>0;){const o=(0,n.clone)((0,r.ensureNotNull)(i.getStartDay()));if((0,n.add_date)(o,-a),!this.isCalWeekEnd(o)){const r={entryIndex:s,weekIndex:e};t.push(r);break}a--}}return t}static _getWeekIndexImpl(e){const t=(0,n.get_cal_utc)((0,n.get_year)(e),(0,n.get_month)(e),1);(0,n.add_date)(t,(0,n.get_day_of_month)(e)-(0,n.get_day_of_week)(e));const s=t.getTime()/1e3;return(0,r.assert)((s+62167219200)%86400==0),Math.trunc((s+62167219200)/86400/7)}}},532448:(e,t,s)=>{function r(e){return n(e,2)}function n(e,t=2){const s=e.toString();return"0".repeat(Math.max(0,t-s.length))+s}s.d(t,{addLeadingZero:()=>r,addLeadingZeros:()=>n})}}]);